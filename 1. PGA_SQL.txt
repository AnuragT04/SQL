Submitted by: Anurag Tiwari

Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

Querry used: SELECT COUNT(*) FROM TABLE_NAME
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

Querry used: SELECT COUNT(DISTINCT(PRIMARY_KEY)) FROM TABLE_NAME

i. Business = (id) 10000
ii. Hours = (business_id) 1562
iii. Category = (business_id) 2643
iv. Attribute = (business_id) 1115
v. Review = (id) 10000
vi. Checkin = (business_id) 493
vii. Photo = (id) 10000
viii. Tip = (user_id) 537
ix. User = (id) 10000
x. Friend = (user_id) 11
xi. Elite_years = (user_id) 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No
	
	
	SQL code used to arrive at answer:
		SELECT COUNT(*)
		FROM user
		WHERE id IS NULL 
		  OR name IS NULL
		  OR review_count IS NULL
		  OR yelping_since IS NULL
		  OR useful IS NULL
		  OR funny IS NULL  
		  OR cool IS NULL  
		  OR fans IS NULL  
		  OR average_stars IS NULL  
		  OR compliment_hot IS NULL  
		  OR compliment_more IS NULL  
		  OR compliment_profile IS NULL  
		  OR compliment_cute IS NULL  
		  OR compliment_list IS NULL  
		  OR compliment_note IS NULL  
		  OR compliment_plain IS NULL  
		  OR compliment_cool IS NULL  
		  OR compliment_funny IS NULL  
		  OR compliment_writer IS NULL  
		  OR compliment_photos IS NULL
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

Querry used: SELECT MAX(COLUMN_NAME) FROM TABLE_NAME
			 SELECT MIN(COLUMN_NAME) FROM TABLE_NAME
			 SELECT AVG(COLUMN_NAME) FROM TABLE_NAME

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

		SELECT city, SUM(review_count) AS No_of_Reviews
		FROM business
		GROUP BY city
		ORDER BY No_of_Reviews DESC
	
	
	Copy and Paste the Result Below:

+-----------------+---------------+
| city            | No_of_Reviews |
+-----------------+---------------+
| Las Vegas       |         82854 |
| Phoenix         |         34503 |
| Toronto         |         24113 |
| Scottsdale      |         20614 |
| Charlotte       |         12523 |
| Henderson       |         10871 |
| Tempe           |         10504 |
| Pittsburgh      |          9798 |
| Montréal        |          9448 |
| Chandler        |          8112 |
| Mesa            |          6875 |
| Gilbert         |          6380 |
| Cleveland       |          5593 |
| Madison         |          5265 |
| Glendale        |          4406 |
| Mississauga     |          3814 |
| Edinburgh       |          2792 |
| Peoria          |          2624 |
| North Las Vegas |          2438 |
| Markham         |          2352 |
| Champaign       |          2029 |
| Stuttgart       |          1849 |
| Surprise        |          1520 |
| Lakewood        |          1465 |
| Goodyear        |          1155 |
+-----------------+---------------+
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

			SELECT stars,
			SUM(review_count) AS count
			FROM business
			WHERE city = 'Avon'
			GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |    10 |
|   2.5 |     6 |
|   3.5 |    88 |
|   4.0 |    21 |
|   4.5 |    31 |
|   5.0 |     3 |
+-------+-------+


ii. Beachwood

SQL code used to arrive at answer:

			SELECT stars,
			SUM(review_count) AS count
			FROM business
			WHERE city = 'Beachwood'
			GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     8 |
|   2.5 |     3 |
|   3.0 |    11 |
|   3.5 |     6 |
|   4.0 |    69 |
|   4.5 |    17 |
|   5.0 |    23 |
+-------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:

		SELECT id, name, review_count
		FROM user
		ORDER BY review_count DESC
		LIMIT 3	
		
	Copy and Paste the Result Below:

+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+
		


8. Does posing more reviews correlate with more fans?

		SELECT name, review_count, fans, yelping_since
		FROM user
		ORDER BY fans DESC

+-----------+--------------+------+---------------------+
| name      | review_count | fans | yelping_since       |
+-----------+--------------+------+---------------------+
| Amy       |          609 |  503 | 2007-07-19 00:00:00 |
| Mimi      |          968 |  497 | 2011-03-30 00:00:00 |
| Harald    |         1153 |  311 | 2012-11-27 00:00:00 |
| Gerald    |         2000 |  253 | 2012-12-16 00:00:00 |
| Christine |          930 |  173 | 2009-07-08 00:00:00 |
| Lisa      |          813 |  159 | 2009-10-05 00:00:00 |
| Cat       |          377 |  133 | 2009-02-05 00:00:00 |
| William   |         1215 |  126 | 2015-02-19 00:00:00 |
| Fran      |          862 |  124 | 2012-04-05 00:00:00 |
| Lissa     |          834 |  120 | 2007-08-14 00:00:00 |
| Mark      |          861 |  115 | 2009-05-31 00:00:00 |
| Tiffany   |          408 |  111 | 2008-10-28 00:00:00 |
| bernice   |          255 |  105 | 2007-08-29 00:00:00 |
| Roanna    |         1039 |  104 | 2006-03-28 00:00:00 |
| Angela    |          694 |  101 | 2010-10-01 00:00:00 |
| .Hon      |         1246 |  101 | 2006-07-19 00:00:00 |
| Ben       |          307 |   96 | 2007-03-10 00:00:00 |
| Linda     |          584 |   89 | 2005-08-07 00:00:00 |
| Christina |          842 |   85 | 2012-10-08 00:00:00 |
| Jessica   |          220 |   84 | 2009-01-12 00:00:00 |
| Greg      |          408 |   81 | 2008-02-16 00:00:00 |
| Nieves    |          178 |   80 | 2013-07-08 00:00:00 |
| Sui       |          754 |   78 | 2009-09-07 00:00:00 |
| Yuri      |         1339 |   76 | 2008-01-03 00:00:00 |
| Nicole    |          161 |   73 | 2009-04-30 00:00:00 |
+-----------+--------------+------+---------------------+

	Please explain your findings and interpretation of the results: 

			Yes, it does help but it does not have as big of an impact as expected.

	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: love: 1780
			hate: 232

	
	SQL code used to arrive at answer:

	SELECT COUNT(*)									
	FROM review										
	WHERE text LIKE "%love%"						

	SELECT COUNT(*)
	FROM review
	WHERE text LIKE "%hate%"
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
	SELECT name, fans
	FROM user
	ORDER BY fans DESC
	LIMIT 10
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

	
i.  Do the two groups you chose to analyze have a different distribution of hours?
    The distribution of hours was more or less similar. One of the lower rated establishment even had longer hours.


ii. Do the two groups you chose to analyze have a different number of reviews?
    One of the higher rated establishment had more than twice as many reviews than others. Yes, the higher rated establishment had more reviews.     
         
iii.Are you able to infer anything from the location data provided between these two groups? Explain.
    All the lower rated establishment were located in E Tropicana Ave. 

SQL code used for analysis:

		Select B.name,B.neighborhood, B.address, B.city, C.category, B.stars, B.review_count, H.hours
		from business B inner join category C on B.id=C.business_id
		inner join hours H on B.id=H.business_id
		where B.city='Las Vegas' and C.category='Shopping'
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Businesses that are open have much higher review count indicating larger customer base whereas closed businesses have lower review count.
         
         
ii. Difference 2: Number of open businesses are higher and have slightly higher rating as compared to closed businesses.
         
         
         
SQL code used for analysis:

	Select is_open, count(distinct id), avg(stars), sum(review_count), avg(review_count)
	from business 
	group by is_open

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i.   Indicate the type of analysis you chose to do:
	 I am doing the analysis of the business categories that have higher chances of survival based on the data
	 taken from the business and category tables and finding the statistics for this data grouping it based on the
	 category it falls into and giving it a rating based on its chances of survival.
         
ii.  Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
	 The data required is the average rating, total number of reviews, number of establishment and the rate of survival
	 for each category. This data is readily available and is sufficient of this analysis.
                           
                  
iii. Output of your finished dataset:

+---------------------------+-------------------+---------------+---------------------+----------------+---------------------+
| category                  | count(C.category) |  avg(B.stars) | sum(B.review_count) | avg(B.is_open) | chances_of_survival |
+---------------------------+-------------------+---------------+---------------------+----------------+---------------------+
| Restaurants               |                71 | 3.45774647887 |                4504 | 0.746478873239 | High                |
| Shopping                  |                30 | 3.98333333333 |                 977 | 0.833333333333 | High                |
| Food                      |                23 | 3.78260869565 |                1781 | 0.869565217391 | High                |
| Nightlife                 |                20 |         3.475 |                1351 |            0.6 | Average             |
| Bars                      |                17 |           3.5 |                1322 | 0.647058823529 | Average             |
| Health & Medical          |                17 | 4.08823529412 |                 203 | 0.941176470588 | Very High           |
| Home Services             |                16 |           4.0 |                  94 |         0.9375 | Very High           |
| Beauty & Spas             |                13 | 3.88461538462 |                 119 | 0.923076923077 | Very High           |
| Local Services            |                12 | 4.20833333333 |                 100 | 0.833333333333 | High                |
| American (Traditional)    |                11 | 3.81818181818 |                1128 | 0.727272727273 | High                |
| Active Life               |                10 |          4.15 |                 131 |            1.0 | Very High           |
| Automotive                |                 9 |           4.5 |                 198 |            1.0 | Very High           |
| Hotels & Travel           |                 9 | 3.22222222222 |                 381 | 0.888888888889 | High                |
| Burgers                   |                 8 |         3.125 |                 297 |          0.875 | High                |
| Sandwiches                |                 8 |        3.9375 |                 974 |           0.75 | High                |
| Arts & Entertainment      |                 7 |           4.0 |                 388 |            1.0 | Very High           |
| Fast Food                 |                 7 | 3.21428571429 |                 185 |            1.0 | Very High           |
| Mexican                   |                 7 |           3.5 |                 327 | 0.714285714286 | High                |
| American (New)            |                 6 | 3.33333333333 |                 481 |            0.5 | Low                 |
| Event Planning & Services |                 6 |          3.75 |                 118 |            0.5 | Low                 |
| Hair Salons               |                 6 | 4.08333333333 |                  65 |            1.0 | Very High           |
| Bakeries                  |                 5 |           4.1 |                 239 |            0.8 | High                |
| Doctors                   |                 5 |           4.2 |                  55 |            1.0 | Very High           |
| Indian                    |                 5 |           3.6 |                  63 |            0.8 | High                |
| Japanese                  |                 5 |           3.8 |                 152 |            0.6 | Average             |
+---------------------------+-------------------+---------------+---------------------+----------------+---------------------+
         
         
iv.  Provide the SQL code you used to create your final dataset:

Select C.category,count(C.category), avg(B.stars), sum(B.review_count), avg(B.is_open),
case
    when avg(B.is_open)>0.9 then 'Very High'
    when avg(B.is_open)>0.7 then 'High'
    when avg(B.is_open)>0.5 then 'Average'
    when avg(B.is_open)>0.3 then 'Low'
    when avg(B.is_open)>0.0 then 'Take your money and run'
end as chances_of_survival
from business B inner join category C on B.id=C.business_id
group by C.category
order by count(C.category) desc